import{_ as d,c as i,a as p,b as n,d as s,w as a,e,r as y,o as u}from"./app.c6b64394.js";const ts=JSON.parse('{"title":"\u7B2C 2 \u5929 \u94FE\u8868\uFF08\u7B80\u5355\uFF09","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u5251\u6307 Offer 06. \u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868","slug":"\u5251\u6307-offer-06-\u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868","link":"#\u5251\u6307-offer-06-\u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868","children":[{"level":3,"title":"\u975E\u9012\u5F52\u89E3\u6CD5","slug":"\u975E\u9012\u5F52\u89E3\u6CD5","link":"#\u975E\u9012\u5F52\u89E3\u6CD5","children":[]},{"level":3,"title":"\u9012\u5F52\u89E3\u6CD5","slug":"\u9012\u5F52\u89E3\u6CD5","link":"#\u9012\u5F52\u89E3\u6CD5","children":[]}]},{"level":2,"title":"\u5251\u6307 Offer 24. \u53CD\u8F6C\u94FE\u8868","slug":"\u5251\u6307-offer-24-\u53CD\u8F6C\u94FE\u8868","link":"#\u5251\u6307-offer-24-\u53CD\u8F6C\u94FE\u8868","children":[{"level":3,"title":"\u975E\u9012\u5F52\u89E3\u6CD5","slug":"\u975E\u9012\u5F52\u89E3\u6CD5-1","link":"#\u975E\u9012\u5F52\u89E3\u6CD5-1","children":[]},{"level":3,"title":"\u9012\u5F52\u89E3\u6CD5","slug":"\u9012\u5F52\u89E3\u6CD5-1","link":"#\u9012\u5F52\u89E3\u6CD5-1","children":[]}]},{"level":2,"title":"\u5251\u6307 Offer 35. \u590D\u6742\u94FE\u8868\u7684\u590D\u5236","slug":"\u5251\u6307-offer-35-\u590D\u6742\u94FE\u8868\u7684\u590D\u5236","link":"#\u5251\u6307-offer-35-\u590D\u6742\u94FE\u8868\u7684\u590D\u5236","children":[]},{"level":2,"title":"\u603B\u7ED3","slug":"\u603B\u7ED3","link":"#\u603B\u7ED3","children":[]}],"relativePath":"pages/algorithm/leetcode/jianzhioffer/day02.md"}'),_={name:"pages/algorithm/leetcode/jianzhioffer/day02.md"},h=e(`<h1 id="\u7B2C-2-\u5929-\u94FE\u8868-\u7B80\u5355" tabindex="-1">\u7B2C 2 \u5929 \u94FE\u8868\uFF08\u7B80\u5355\uFF09 <a class="header-anchor" href="#\u7B2C-2-\u5929-\u94FE\u8868-\u7B80\u5355" aria-hidden="true">#</a></h1><h2 id="\u5251\u6307-offer-06-\u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868" tabindex="-1"><a href="https://leetcode.cn/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof/?envType=study-plan&amp;id=lcof&amp;plan=lcof&amp;plan_progress=1v5v651" target="_blank" rel="noreferrer">\u5251\u6307 Offer 06. \u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868</a> <a class="header-anchor" href="#\u5251\u6307-offer-06-\u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868" aria-hidden="true">#</a></h2><h3 id="\u975E\u9012\u5F52\u89E3\u6CD5" tabindex="-1">\u975E\u9012\u5F52\u89E3\u6CD5 <a class="header-anchor" href="#\u975E\u9012\u5F52\u89E3\u6CD5" aria-hidden="true">#</a></h3><p>\u601D\u8DEF\uFF1A</p><ol><li>\u58F0\u660E\u4E00\u4E2A\u6808</li><li>\u904D\u5386\u94FE\u8868\uFF0C\u94FE\u8868\u8282\u70B9\u7684\u503C\u5165\u6808</li><li>\u51FA\u6808\u987A\u5E8F\u5C31\u662F\u4ECE\u5C3E\u5230\u5934</li></ol><p>\u4EE3\u7801\uFF1A</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Solution</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">reversePrint</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ListNode</span><span style="color:#C792EA;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> res</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    stack</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> st</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">head </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">st</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      head </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#A6ACCD;">st</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">empty</span><span style="color:#89DDFF;">())</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push_back</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">st</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">top</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">st</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pop</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> res</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h3 id="\u9012\u5F52\u89E3\u6CD5" tabindex="-1">\u9012\u5F52\u89E3\u6CD5 <a class="header-anchor" href="#\u9012\u5F52\u89E3\u6CD5" aria-hidden="true">#</a></h3><p>\u601D\u8DEF\uFF1A</p><ol><li>\u9012\u5F52\u7ED3\u675F\u6761\u4EF6\uFF1A\u5F53\u524D\u8282\u70B9\u4E3A\u7A7A\uFF0C\u8FD4\u56DE <code>[]</code></li><li>\u56DE\u6EAF\u64CD\u4F5C\uFF1A<code>[] + [cur-&gt;val]</code></li></ol><p>\u4EE3\u7801\uFF1A</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Solution</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">reversePrint</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ListNode</span><span style="color:#C792EA;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">head </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;{};</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">    vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> res </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">reversePrint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push_back</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> res</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h2 id="\u5251\u6307-offer-24-\u53CD\u8F6C\u94FE\u8868" tabindex="-1"><a href="https://leetcode.cn/problems/fan-zhuan-lian-biao-lcof/?envType=study-plan&amp;id=lcof&amp;plan=lcof&amp;plan_progress=1v5v651" target="_blank" rel="noreferrer">\u5251\u6307 Offer 24. \u53CD\u8F6C\u94FE\u8868</a> <a class="header-anchor" href="#\u5251\u6307-offer-24-\u53CD\u8F6C\u94FE\u8868" aria-hidden="true">#</a></h2><h3 id="\u975E\u9012\u5F52\u89E3\u6CD5-1" tabindex="-1">\u975E\u9012\u5F52\u89E3\u6CD5 <a class="header-anchor" href="#\u975E\u9012\u5F52\u89E3\u6CD5-1" aria-hidden="true">#</a></h3><p>\u601D\u8DEF\uFF1A</p><ol><li>\u5B9A\u4E49\u4E24\u4E2A\u8282\u70B9\uFF1A<code>prev = head</code>\uFF0C<code>cur = head-&gt;next</code></li><li>\u904D\u5386\u94FE\u8868\uFF1A\u4F7F\u7528 <code>tmp</code> \u4FDD\u5B58 <code>cur-&gt;next</code>\uFF0C\u7136\u540E <code>cur-&gt;next = prev</code>\uFF0C\u6700\u540E\u5F80\u540E\u79FB\u52A8\uFF0C\u5373 <code>prev = cur</code> \u548C <code>cur = tmp</code></li><li>\u8FD4\u56DE <code>prev</code></li></ol><p>\u4EE3\u7801\uFF1A</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Solution</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">ListNode</span><span style="color:#C792EA;">*</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">reverseList</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ListNode</span><span style="color:#C792EA;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">head </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> head</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">auto</span><span style="color:#F07178;"> prev </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> head</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> cur </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">cur </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">auto</span><span style="color:#F07178;"> tmp </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cur</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">cur</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> prev</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      prev </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> cur</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      cur </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> tmp</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> prev</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h3 id="\u9012\u5F52\u89E3\u6CD5-1" tabindex="-1">\u9012\u5F52\u89E3\u6CD5 <a class="header-anchor" href="#\u9012\u5F52\u89E3\u6CD5-1" aria-hidden="true">#</a></h3><p>\u601D\u8DEF\uFF1A</p><ol><li>\u9012\u5F52\u7ED3\u675F\u6761\u4EF6\uFF1A\u94FE\u8868\u6CA1\u6709\u6216\u8005\u53EA\u6709\u4E00\u4E2A\u5143\u7D20\uFF0C\u4E0D\u9700\u8981\u53CD\u8F6C\uFF0C\u76F4\u63A5\u8FD4\u56DE</li><li>\u56DE\u6EAF\u64CD\u4F5C\uFF1A<code>cur-&gt;next-&gt;next = cur</code> \u548C <code>cur-&gt;next = null</code></li></ol><p>\u4EE3\u7801\uFF1A</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Solution</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">ListNode</span><span style="color:#C792EA;">*</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">reverseList</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ListNode</span><span style="color:#C792EA;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">head </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> head</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">auto</span><span style="color:#F07178;"> newHead </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">reverseList</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> head</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> newHead</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h2 id="\u5251\u6307-offer-35-\u590D\u6742\u94FE\u8868\u7684\u590D\u5236" tabindex="-1"><a href="https://leetcode.cn/problems/fu-za-lian-biao-de-fu-zhi-lcof/?envType=study-plan&amp;id=lcof&amp;plan=lcof&amp;plan_progress=1v5v651" target="_blank" rel="noreferrer">\u5251\u6307 Offer 35. \u590D\u6742\u94FE\u8868\u7684\u590D\u5236</a> <a class="header-anchor" href="#\u5251\u6307-offer-35-\u590D\u6742\u94FE\u8868\u7684\u590D\u5236" aria-hidden="true">#</a></h2><p>\u601D\u8DEF\uFF1A</p><ol><li>\u521B\u5EFA\u4E00\u4E2A\u54C8\u5E0C\u8868\uFF0C\u5B58\u50A8\u5F53\u539F\u8282\u70B9\u5230\u590D\u5236\u8282\u70B9\u7684\u6620\u5C04</li><li>\u904D\u5386\u94FE\u8868\uFF0C\u5C06\u8282\u70B9\u7684 <code>next</code> \u548C <code>random</code> \u6307\u5411\u590D\u5236\u8282\u70B9\uFF0C\u5373\u901A\u8FC7\u54C8\u5E0C\u8868\u6765\u67E5\u627E <code>hash[cur-&gt;next]</code> \u548C <code>hash[cur-&gt;random]</code></li></ol><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Solution</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">Node</span><span style="color:#C792EA;">*</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">copyRandomList</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Node</span><span style="color:#C792EA;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">head </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">nullptr)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">nullptr;</span></span>
<span class="line"><span style="color:#F07178;">    unordered_map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Node</span><span style="color:#89DDFF;">*,</span><span style="color:#F07178;"> Node</span><span style="color:#89DDFF;">*&gt;</span><span style="color:#F07178;"> hash</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">auto</span><span style="color:#F07178;"> cur </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> head</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">cur </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">nullptr)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">hash</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">cur</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Node</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">cur</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      cur </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cur</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    cur </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> head</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">cur </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">nullptr)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">hash</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">cur</span><span style="color:#89DDFF;">]-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">hash</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">cur</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">hash</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">cur</span><span style="color:#89DDFF;">]-&gt;</span><span style="color:#A6ACCD;">random</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">hash</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">cur</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">random</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#F07178;">      cur </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cur</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">hash</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h2 id="\u603B\u7ED3" tabindex="-1">\u603B\u7ED3 <a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a></h2>`,28),m={class:"katex"},f={class:"katex-mathml"},A=e('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span>',1),C={class:"katex"},g={class:"katex-mathml"},x=e('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mord mathit">o</span><span class="mord mathit">d</span><span class="mord mathit">e</span><span class="mclose">)</span></span></span>',1),T={class:"katex"},v={class:"katex-mathml"},b=e('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="mord mathit">o</span><span class="mord mathit">d</span><span class="mord mathit">e</span></span></span>',1),k={class:"katex"},S={class:"katex-mathml"},E=e('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span>',1),N={class:"katex"},B={class:"katex-mathml"},L=e('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mbin">\u2212</span><span class="mord mathrm">1</span><span class="mclose">)</span></span></span>',1),P={class:"katex"},V={class:"katex-mathml"},I=e('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mord mathit">o</span><span class="mord mathit">d</span><span class="mord mathit">e</span><span class="mclose">)</span></span></span>',1),w={class:"katex"},R={class:"katex-mathml"},U=e('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mord mathit">o</span><span class="mord mathit">d</span><span class="mord mathit">e</span><span class="mrel">\u2192</span><span class="mord mathit">n</span><span class="mord mathit">e</span><span class="mord mathit">x</span><span class="mord mathit">t</span><span class="mclose">)</span></span></span>',1),O=p("code",null,"1->2->3->4->5->null",-1),z={class:"katex"},$={class:"katex-mathml"},j=e('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mord mathit">o</span><span class="mord mathit">d</span><span class="mord mathit">e</span><span class="mrel">=</span><span class="mord mathrm">2</span><span class="mclose">)</span></span></span>',1),H={class:"katex"},J={class:"katex-mathml"},q=e('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mord mathit">o</span><span class="mord mathit">d</span><span class="mord mathit">e</span><span class="mrel">=</span><span class="mord mathrm">1</span><span class="mclose">)</span></span></span>',1),G={class:"katex"},K={class:"katex-mathml"},M=e('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="mord mathit">o</span><span class="mord mathit">d</span><span class="mord mathit">e</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span>',1),Q={class:"katex"},W={class:"katex-mathml"},X=e('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="mord mathit">o</span><span class="mord mathit">d</span><span class="mord mathit">e</span><span class="mrel">=</span><span class="mord mathrm">2</span></span></span>',1),Y=p("ol",null,[p("li",null,[p("code",null,"cur->next->next = cur")]),p("li",null,[p("code",null,"cur->next = null")])],-1);function Z(ss,as,ns,ls,ps,os){const l=y("mi"),t=y("mrow"),c=y("annotation"),r=y("semantics"),F=y("math"),o=y("mo"),D=y("mn");return u(),i("div",null,[h,p("p",null,[n("\u5BF9\u4E8E\u90E8\u5206\u9012\u5F52\u7684\u5199\u6CD5\u53EF\u80FD\u4E0D\u50CF"),p("span",m,[p("span",f,[s(F,null,{default:a(()=>[s(r,null,{default:a(()=>[s(t,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("n")]),_:1})]),_:1})]),_:1})]),A]),n("\u7684\u9636\u4E58\u548C\u6590\u6CE2\u90A3\u5951\u6570\u5217\u8FD9\u79CD\u95EE\u9898\u6709\u7740\u660E\u663E\u7684\u9012\u5F52\u516C\u5F0F\uFF0C\u4F46\u662F\u53EA\u8981\u627E\u5230\u9012\u5F52\u516C\u5F0F\uFF0C\u6211\u4EEC\u5C31\u80FD\u5199\u51FA\u9012\u5F52\u89E3\u6CD5\uFF0C\u62FF\u53CD\u8F6C\u94FE\u8868\u4E3E\u4F8B\uFF1A \u6B64\u65F6\u8981\u89E3\u51B3\u7684\u95EE\u9898\u662F"),p("span",C,[p("span",g,[s(F,null,{default:a(()=>[s(r,null,{default:a(()=>[s(t,null,{default:a(()=>[s(l,null,{default:a(()=>[n("f")]),_:1}),s(o,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("o")]),_:1}),s(l,null,{default:a(()=>[n("d")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(o,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("f(node)")]),_:1})]),_:1})]),_:1})]),x]),n("\uFF0C\u5373\u628A\u4EE5"),p("span",T,[p("span",v,[s(F,null,{default:a(()=>[s(r,null,{default:a(()=>[s(t,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("o")]),_:1}),s(l,null,{default:a(()=>[n("d")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("node")]),_:1})]),_:1})]),_:1})]),b]),n("\u4E3A\u5934\u8282\u70B9\u7684\u94FE\u8868\u53CD\u8F6C\u3002\u6211\u4EEC\u8003\u8651"),p("span",k,[p("span",S,[s(F,null,{default:a(()=>[s(r,null,{default:a(()=>[s(t,null,{default:a(()=>[s(l,null,{default:a(()=>[n("f")]),_:1}),s(o,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("n")]),_:1}),s(o,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("f(n)")]),_:1})]),_:1})]),_:1})]),E]),n("\u548C"),p("span",N,[p("span",B,[s(F,null,{default:a(()=>[s(r,null,{default:a(()=>[s(t,null,{default:a(()=>[s(l,null,{default:a(()=>[n("f")]),_:1}),s(o,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("n")]),_:1}),s(o,null,{default:a(()=>[n("\u2212")]),_:1}),s(D,null,{default:a(()=>[n("1")]),_:1}),s(o,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("f(n-1)")]),_:1})]),_:1})]),_:1})]),L]),n("\u7684\u5173\u7CFB\uFF0C\u4E5F\u5C31\u662F"),p("span",P,[p("span",V,[s(F,null,{default:a(()=>[s(r,null,{default:a(()=>[s(t,null,{default:a(()=>[s(l,null,{default:a(()=>[n("f")]),_:1}),s(o,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("o")]),_:1}),s(l,null,{default:a(()=>[n("d")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(o,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("f(node)")]),_:1})]),_:1})]),_:1})]),I]),n("\u548C"),p("span",w,[p("span",R,[s(F,null,{default:a(()=>[s(r,null,{default:a(()=>[s(t,null,{default:a(()=>[s(l,null,{default:a(()=>[n("f")]),_:1}),s(o,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("o")]),_:1}),s(l,null,{default:a(()=>[n("d")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(o,null,{default:a(()=>[n("\u2192")]),_:1}),s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(l,null,{default:a(()=>[n("x")]),_:1}),s(l,null,{default:a(()=>[n("t")]),_:1}),s(o,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("f(node\\rightarrow next)")]),_:1})]),_:1})]),_:1})]),U]),n("\u7684\u5173\u7CFB\u3002 \u5BF9\u4E8E "),O,n("\uFF0C\u6B64\u65F6\u9012\u5F52\u516C\u5F0F\u662F\u4EC0\u4E48\uFF1F \u5047\u8BBE"),p("span",z,[p("span",$,[s(F,null,{default:a(()=>[s(r,null,{default:a(()=>[s(t,null,{default:a(()=>[s(l,null,{default:a(()=>[n("f")]),_:1}),s(o,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("o")]),_:1}),s(l,null,{default:a(()=>[n("d")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(o,null,{default:a(()=>[n("=")]),_:1}),s(D,null,{default:a(()=>[n("2")]),_:1}),s(o,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("f(node=2)")]),_:1})]),_:1})]),_:1})]),j]),n("\u5DF2\u89E3\u51B3\uFF0C\u90A3"),p("span",H,[p("span",J,[s(F,null,{default:a(()=>[s(r,null,{default:a(()=>[s(t,null,{default:a(()=>[s(l,null,{default:a(()=>[n("f")]),_:1}),s(o,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("o")]),_:1}),s(l,null,{default:a(()=>[n("d")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(o,null,{default:a(()=>[n("=")]),_:1}),s(D,null,{default:a(()=>[n("1")]),_:1}),s(o,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("f(node=1)")]),_:1})]),_:1})]),_:1})]),q]),n("\u5982\u4F55\u89E3\u51B3\uFF1F\u5F88\u660E\u663E\uFF0C\u53EA\u8981\u6211\u4EEC\u4EA4\u6362"),p("span",G,[p("span",K,[s(F,null,{default:a(()=>[s(r,null,{default:a(()=>[s(t,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("o")]),_:1}),s(l,null,{default:a(()=>[n("d")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(o,null,{default:a(()=>[n("=")]),_:1}),s(D,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("node=1")]),_:1})]),_:1})]),_:1})]),M]),n("\u548C"),p("span",Q,[p("span",W,[s(F,null,{default:a(()=>[s(r,null,{default:a(()=>[s(t,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("o")]),_:1}),s(l,null,{default:a(()=>[n("d")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(o,null,{default:a(()=>[n("=")]),_:1}),s(D,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("node=2")]),_:1})]),_:1})]),_:1})]),X]),n("\u5C31\u884C\u4E86\uFF0C\u5373\u9012\u5F52\u516C\u5F0F\u4E3A f(node) = f(node\\rightarrow next) + \u53CD\u8F6C\\ node\\ \u548C\\ node\\rightarrow next\u3002\u5177\u4F53\u64CD\u4F5C\u5C31\u662F\uFF1A")]),Y])}const cs=d(_,[["render",Z]]);export{ts as __pageData,cs as default};
