import{_ as d,c as C,a as l,b as a,d as s,w as n,e as t,r as p,o as A}from"./app.510778be.js";const I=JSON.parse('{"title":"\u7B2C 20 \u5929 \u5206\u6CBB\u7B97\u6CD5\uFF08\u4E2D\u7B49\uFF09","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u5251\u6307 Offer 07. \u91CD\u5EFA\u4E8C\u53C9\u6811","slug":"\u5251\u6307-offer-07-\u91CD\u5EFA\u4E8C\u53C9\u6811","link":"#\u5251\u6307-offer-07-\u91CD\u5EFA\u4E8C\u53C9\u6811","children":[]},{"level":2,"title":"\u5251\u6307 Offer 16. \u6570\u503C\u7684\u6574\u6570\u6B21\u65B9","slug":"\u5251\u6307-offer-16-\u6570\u503C\u7684\u6574\u6570\u6B21\u65B9","link":"#\u5251\u6307-offer-16-\u6570\u503C\u7684\u6574\u6570\u6B21\u65B9","children":[]},{"level":2,"title":"\u5251\u6307 Offer 33. \u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u5E8F\u5217","slug":"\u5251\u6307-offer-33-\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u5E8F\u5217","link":"#\u5251\u6307-offer-33-\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u5E8F\u5217","children":[]}],"relativePath":"pages/algorithm/leetcode/jianzhioffer/day20.md"}'),u={name:"pages/algorithm/leetcode/jianzhioffer/day20.md"},f=t(`<h1 id="\u7B2C-20-\u5929-\u5206\u6CBB\u7B97\u6CD5-\u4E2D\u7B49" tabindex="-1">\u7B2C 20 \u5929 \u5206\u6CBB\u7B97\u6CD5\uFF08\u4E2D\u7B49\uFF09 <a class="header-anchor" href="#\u7B2C-20-\u5929-\u5206\u6CBB\u7B97\u6CD5-\u4E2D\u7B49" aria-hidden="true">#</a></h1><h2 id="\u5251\u6307-offer-07-\u91CD\u5EFA\u4E8C\u53C9\u6811" tabindex="-1"><a href="https://leetcode.cn/problems/zhong-jian-er-cha-shu-lcof/?envType=study-plan&amp;id=lcof&amp;plan=lcof&amp;plan_progress=1v5v651" target="_blank" rel="noreferrer">\u5251\u6307 Offer 07. \u91CD\u5EFA\u4E8C\u53C9\u6811</a> <a class="header-anchor" href="#\u5251\u6307-offer-07-\u91CD\u5EFA\u4E8C\u53C9\u6811" aria-hidden="true">#</a></h2><p>\u601D\u8DEF\uFF1A</p><ol><li>\u901A\u8FC7\u524D\u5E8F\u904D\u5386\u7ED3\u679C\u62FF\u5230\u6839\u8282\u70B9\uFF0C\u5C06\u4E2D\u5E8F\u904D\u5386\u4E00\u5206\u4E3A\u4E8C\uFF0C\u9012\u5F52\u8FD9\u4E2A\u8FC7\u7A0B</li><li>\u7B2C\u4E00\u6B21\u6839\u8282\u70B9\u4E3A <code>preorder[0]</code>\uFF0C\u5DE6\u8FB9\u754C\u4E3A <code>0</code>\uFF0C\u53F3\u8FB9\u754C\u4E3A <code>preorder.size() - 1</code></li><li>\u5982\u679C\u5DE6\u8FB9\u754C\u5927\u4E8E\u53F3\u8FB9\u754C\uFF0C\u5230\u8FBE\u9012\u5F52\u8FB9\u754C</li><li>\u4EE5\u6839\u8282\u70B9\u5EFA\u6811\uFF0C\u901A\u8FC7\u6839\u8282\u70B9\u5206\u51FA\u5DE6\u5B50\u6811\u548C\u53F3\u5B50\u6811\uFF0C\u7136\u540E\u5DE6\u53F3\u5B50\u6811\u91CD\u590D\u4E0A\u8FF0\u8FC7\u7A0B</li></ol><p>\u4EE3\u7801\uFF1A</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Solution</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">TreeNode</span><span style="color:#C792EA;">*</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">buildTree</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">preorder</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">inorder</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">reBuild</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">preorder</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> inorder</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">preorder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">TreeNode</span><span style="color:#C792EA;">*</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">reBuild</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">preorder</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">inorder</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">right</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">left </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> right</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">nullptr;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">auto</span><span style="color:#F07178;"> node </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">TreeNode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">preorder</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">root</span><span style="color:#89DDFF;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> idx</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">inorder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">();</span><span style="color:#F07178;"> i</span><span style="color:#89DDFF;">++)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">inorder</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">preorder</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">root</span><span style="color:#89DDFF;">])</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        idx </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> i</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">left</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">reBuild</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">preorder</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> inorder</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> root </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> left</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> idx </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">right</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">reBuild</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">preorder</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> inorder</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> root </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> idx </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> left  </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> idx </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> right</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> node</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h2 id="\u5251\u6307-offer-16-\u6570\u503C\u7684\u6574\u6570\u6B21\u65B9" tabindex="-1"><a href="https://leetcode.cn/problems/shu-zhi-de-zheng-shu-ci-fang-lcof/?envType=study-plan&amp;id=lcof&amp;plan=lcof&amp;plan_progress=1v5v651" target="_blank" rel="noreferrer">\u5251\u6307 Offer 16. \u6570\u503C\u7684\u6574\u6570\u6B21\u65B9</a> <a class="header-anchor" href="#\u5251\u6307-offer-16-\u6570\u503C\u7684\u6574\u6570\u6B21\u65B9" aria-hidden="true">#</a></h2><p>\u601D\u8DEF\uFF1A</p>`,8),m={class:"katex"},_={class:"katex-mathml"},h=t('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.664392em;"></span><span class="strut bottom" style="height:0.664392em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">\u200B</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">\u200B</span></span>\u200B</span></span></span></span></span>',1),g=l("code",null,"x * myPow(x, n - 1)",-1),x={class:"katex"},z={class:"katex-mathml"},E=t('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8540800000000001em;"></span><span class="strut bottom" style="height:0.8540800000000001em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">\u200B</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord reset-scriptstyle scriptstyle uncramped"><span class="sizing reset-size5 size5 reset-scriptstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">\u200B</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span style="top:-0.22142857142857142em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">\u200B</span></span><span class="reset-scriptstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">\u200B</span></span><span class="reset-scriptstyle scriptscriptstyle uncramped"><span class="mord scriptscriptstyle uncramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">\u200B</span></span>\u200B</span></span></span><span class="sizing reset-size5 size5 reset-scriptstyle textstyle uncramped nulldelimiter"></span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">\u200B</span></span>\u200B</span></span></span></span></span>',1),b=l("li",null,"\u5982\u679C\u7EE7\u7EED\u8FDB\u884C\u4F18\u5316\uFF0C\u5C31\u662F\u5FEB\u901F\u5E42",-1),v=t(`<p>\u4EE3\u7801\uFF1A</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Solution</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">double</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">myPow</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">double</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">n </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">n </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">    // -2^31 \u53D8\u6B63\u6570\u4F1A\u6EA2\u51FA int</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">long</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">long</span><span style="color:#F07178;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> n</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">b </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      b </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      x </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">double</span><span style="color:#F07178;"> ans </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">myPow</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> b </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    ans </span><span style="color:#89DDFF;">*=</span><span style="color:#F07178;"> ans</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">b </span><span style="color:#89DDFF;">%</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> ans </span><span style="color:#89DDFF;">*=</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> ans</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h2 id="\u5251\u6307-offer-33-\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u5E8F\u5217" tabindex="-1"><a href="https://leetcode.cn/study-plan/lcof/?progress=1v5v651" target="_blank" rel="noreferrer">\u5251\u6307 Offer 33. \u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u5E8F\u5217</a> <a class="header-anchor" href="#\u5251\u6307-offer-33-\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u540E\u5E8F\u904D\u5386\u5E8F\u5217" aria-hidden="true">#</a></h2><p>\u601D\u8DEF\uFF1A</p><ol><li>\u540E\u5E8F\u904D\u5386\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u662F\u6839\u8282\u70B9\uFF0C\u901A\u8FC7\u6839\u8282\u70B9\uFF0C\u68C0\u67E5\u5DE6\u53F3\u5B50\u6811</li><li>\u4ECE\u524D\u5F80\u540E\u904D\u5386\uFF0C\u627E\u5230\u7B2C\u4E00\u4E2A\u6BD4\u6839\u8282\u70B9\u5927\u7684\u503C\uFF0C\u53EF\u4EE5\u5212\u5206\u51FA\u5DE6\u53F3\u5B50\u6811\uFF0C\u7136\u540E\u9012\u5F52\u5224\u65AD\u5DE6\u53F3\u5B50\u6811</li></ol><p>\u4EE3\u7801\uFF1A</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Solution</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">verifyPostorder</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">postorder</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">recur</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">postorder</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">postorder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">recur</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">postorder</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">l</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">l </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#F07178;"> r</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> root </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">postorder</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">r</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> idx </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> l</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">postorder</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">idx</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> root</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> idx</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> mid </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> idx</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">idx </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> r</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;">      // \u5982\u679C\u53F3\u5B50\u6811\u51FA\u73B0\u53CD\u4F8B\uFF0C\u76F4\u63A5\u8FD4\u56DE false</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">postorder</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">idx</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> root</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">false;</span></span>
<span class="line"><span style="color:#F07178;">      idx</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">recur</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">postorder</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> l</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> mid </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">recur</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">postorder</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> mid</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> r </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div>`,7);function T(B,k,S,P,N,V){const e=p("mi"),r=p("msup"),o=p("mrow"),c=p("annotation"),F=p("semantics"),y=p("math"),D=p("mn"),i=p("mfrac");return A(),C("div",null,[f,l("ol",null,[l("li",null,[a("\u8981\u6C42 "),l("span",m,[l("span",_,[s(y,null,{default:n(()=>[s(F,null,{default:n(()=>[s(o,null,{default:n(()=>[s(r,null,{default:n(()=>[s(e,null,{default:n(()=>[a("x")]),_:1}),s(e,null,{default:n(()=>[a("n")]),_:1})]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:n(()=>[a("x^n")]),_:1})]),_:1})]),_:1})]),h]),a("\uFF0C\u53EF\u4EE5\u4F7F\u7528\u9012\u5F52\uFF1A"),g]),l("li",null,[a("\u4E0D\u8FC7\u8FD9\u6837\u5F88\u5BB9\u6613\u7206\u6808\uFF0C\u53EF\u4EE5\u4F7F\u7528\u5206\u6CBB\uFF0C\u5148\u7B97 "),l("span",x,[l("span",z,[s(y,null,{default:n(()=>[s(F,null,{default:n(()=>[s(o,null,{default:n(()=>[s(r,null,{default:n(()=>[s(e,null,{default:n(()=>[a("x")]),_:1}),s(o,null,{default:n(()=>[s(i,null,{default:n(()=>[s(o,null,{default:n(()=>[s(e,null,{default:n(()=>[a("n")]),_:1})]),_:1}),s(o,null,{default:n(()=>[s(D,null,{default:n(()=>[a("2")]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:n(()=>[a("x^{\\frac{n}{2}}")]),_:1})]),_:1})]),_:1})]),E]),a("\uFF0C\u7136\u540E\u518D\u76F8\u4E58\uFF08\u5982\u679C\u662F\u5947\u6570\u518D\u4E58\u4E00\u4E2A x\uFF09")]),b]),v])}const O=d(u,[["render",T]]);export{I as __pageData,O as default};
